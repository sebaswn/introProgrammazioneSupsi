Esercizio 12.1 - Albero binario (3 punti)
Sviluppate un programma e le necessarie classi per un albero binario ordinato di caratteri nel quale
i duplicati non sono ammessi. In seguito, sviluppate i metodi necessari ad attraversare l’albero
ricorsivamente e stamparne il contenuto in maniera in-order, pre-order e post-order. Da ultimo,
implementate la funzionalit`a per cancellare un elemento contenuto nell’albero.
Assicuratevi di collaudare in maniera esaustiva tutte le funzionalit`a implementate.

Esercizio 12.2 - Coda (1 punto)
Sviluppate un programma e le necessarie classi per una coda di persone che aspetta al semaforo
(tramite una struttura dinamica di puntatori). Dovr`a essere possibile identificare ogni persona
tramite nome e cognome. All’interno del programma, simulate una situazione in cui ci sono 3
semafori uno dopo l’altro: le persone che escono dalla prima coda, finiscono nella seconda, e quelle
della seconda nella terza. Eseguite una simulazione con una decina di persone che entrano nella
prima coda, alcune escono altre rimangono, e cos`ı via.

Esercizio 12.3 - Stack (1 punto)
Sviluppate un programma che permetta di controllare il corretto utilizzo delle parentesi (tonde,
quadre e graffe) all’interno di un’espressione algebrica. Il programma dovr`a ricevere come input
l’espressione da controllare e mostrare a schermo se le parentesi sono utilizzate correttamente. In
caso di errore, dovr`a indicare la parentesi che ci si aspettava e la posizione dell’errore all’interno
dell’espressione.
